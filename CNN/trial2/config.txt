# Define device
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")

# RN50 Params
criterion = nn.CrossEntropyLoss(weight=class_weights)
optimizer = optim.SGD(model.parameters(), lr=0.03, weight_decay=0.001)
scheduler = lr_scheduler.StepLR(optimizer, step_size=5, gamma=0.2)


# Possible data augmentation transforms
RN_transform = transforms.Compose([
    # Resize the image to (224, 224) and convert to RGB
    transforms.Resize((224, 224)),
    transforms.Grayscale(num_output_channels=3),  # Convert single-channel image to RGB
    transforms.RandomHorizontalFlip(p=0.5),
    transforms.RandomRotation(degrees=(-10, 10)),
    transforms.ColorJitter(brightness=0.2, contrast=0.2, saturation=0.2, hue=0.1),
    transforms.ToTensor(),
])